// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persona.Persistencia;

namespace Persona.Persistencia.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Persona.Modelo.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("apellidos")
                        .HasColumnType("text");

                    b.Property<DateTime?>("fechanacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("idtipodocumento")
                        .HasColumnType("integer");

                    b.Property<string>("imagen")
                        .HasColumnType("text");

                    b.Property<string>("nombres")
                        .HasColumnType("text");

                    b.Property<string>("numdocumento")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("idtipodocumento");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaDireccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("direccion")
                        .HasColumnType("text");

                    b.Property<int>("idpersona")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("idpersona");

                    b.ToTable("PersonaDireccion");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<int>("idpersona")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("idpersona");

                    b.ToTable("PersonaEmail");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaTelefono", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("idpersona")
                        .HasColumnType("integer");

                    b.Property<string>("telefono")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("idpersona");

                    b.ToTable("PersonaTelefono");
                });

            modelBuilder.Entity("Persona.Modelo.TipoDocumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("Persona.Modelo.Persona", b =>
                {
                    b.HasOne("Persona.Modelo.TipoDocumento", "tipodocumento")
                        .WithMany()
                        .HasForeignKey("idtipodocumento");

                    b.Navigation("tipodocumento");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaDireccion", b =>
                {
                    b.HasOne("Persona.Modelo.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaEmail", b =>
                {
                    b.HasOne("Persona.Modelo.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Persona.Modelo.PersonaTelefono", b =>
                {
                    b.HasOne("Persona.Modelo.Persona", "persona")
                        .WithMany()
                        .HasForeignKey("idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });
#pragma warning restore 612, 618
        }
    }
}
